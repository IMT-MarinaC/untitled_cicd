name: Deploy Maven Site with SonarQube to GitHub Pages

on:
  push:
    branches:
      - master  # Déclencher l'action lorsque tu pushes sur master
  workflow_dispatch:  # Permet de déclencher manuellement

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Run SonarQube analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: |
          mvn clean verify sonar:sonar \
            -Dsonar.projectKey=IMT-MarinaC_untitled_cicd \
            -Dsonar.organization=imt-marinac \
            -Dsonar.host.url=$SONAR_HOST_URL \
            -Dsonar.login=$SONAR_TOKEN

      - name: Build Maven site
        run: mvn site

      - name: Copy SonarQube report to site
        run: |
          mkdir -p target/site/sonar
          cp -r target/sonar-report/* target/site/sonar/
          
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: target/site  # Spécifie le dossier du site généré

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
